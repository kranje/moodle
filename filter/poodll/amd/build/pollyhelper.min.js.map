{"version":3,"file":"pollyhelper.min.js","sources":["../src/pollyhelper.js"],"sourcesContent":["/* jshint ignore:start */\ndefine(['jquery', 'core/log'], function ($, log) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Polly Url: initialising');\n\n    return {\n        sentenceURLs: [],\n        wordstarts: [],\n        wordcounts: [],\n        textblock: false,\n        wordselector: '',\n        sentenceselector: '',\n        cloudpoodlltoken: '',\n        voice: '',\n        highlightmode: '',\n        theplayer: false,\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n        init: function (theplayer,itemid, textblock, voice,sentenceselector,wordselector,highlightmode, cloudpoodlltoken) {\n            var that = this;\n            var usetext = textblock.text();\n            this.textblock= textblock;\n            this.sentenceselector= sentenceselector;\n            this.wordselector= wordselector;\n            this.cloudpoodlltoken = cloudpoodlltoken;\n            this.highlightmode=highlightmode;\n            this.voice = voice;\n            this.theplayer = theplayer;\n\n            // Break text into sentences, and fetch data + TTS URL for each sentence.\n            this.spanify_text_passage();\n            var sentences = this.split_into_sentences(usetext);\n            var previousend = 0;\n\n            for (var currentsentence = 0; currentsentence < sentences.length; currentsentence++){\n                this.wordstarts[currentsentence]= previousend;\n                this.wordcounts[currentsentence]= this.split_into_words(sentences[currentsentence]).length;\n                previousend = previousend + this.wordcounts[currentsentence];\n\n                var speaktext = sentences[currentsentence];\n                this.fetch_polly_url(speaktext,\n                    function(sentenceindex) {\n                        return function(pollyurl) {\n                            that.sentenceURLs[sentenceindex] = pollyurl;\n                        }\n                    }(currentsentence)\n                );\n            }\n        },\n\n        // FUNCTION: Split a text passage into sentences.\n        split_into_sentences: function(thetext){\n            thetext = thetext.replace(/\\s+/g,' ').trim();\n            if(thetext ===''){return[];}\n            return thetext.match(/([^\\.!\\?]+[\\.!\\?\"']+)|([^\\.!\\?\"']+$)/g);\n        },\n\n        // FUNCTION: Split a text passage into words.\n        split_into_words: function(thetext){\n            thetext = thetext.replace(/\\s+/g,' ').trim();\n            if(thetext===''){return[];}\n            return thetext.split(' ');\n        },\n\n        // FUNCTION: Fetch polly url.\n        fetch_polly_url: function (speaktext, callback) {\n\n            // The REST API we are calling.\n            var functionname = 'local_cpapi_fetch_polly_url';\n\n            // Fetch the Posturl. We need this.\n            // Set up our ajax request\n            var xhr = new XMLHttpRequest();\n            var that = this;\n\n            // Set up our handler for the response.\n            xhr.onreadystatechange = function (e) {\n                if (this.readyState === 4) {\n                    if (xhr.status === 200) {\n\n                        // Get a yes or forgetit or tryagain.\n                        var payload = xhr.responseText;\n                        var payloadobject = JSON.parse(payload);\n                        if (payloadobject) {\n                            // ReturnCode > 0  indicates an error.\n                            if (payloadobject.returnCode > 0) {\n                                console.log(payloadobject.returnMessage);\n                                return false;\n                                // If all good, then lets do the embed.\n                            } else if (payloadobject.returnCode === 0){\n                                var pollyurl = payloadobject.returnMessage;\n                                callback(pollyurl);\n                            } else {\n                                console.log('Polly Signed URL Request failed:');\n                                console.log(payloadobject);\n                            }\n                        } else {\n                            console.log('Polly Signed URL Request something bad happened');\n                        }\n                    } else {\n                        console.log('Polly Signed URL Request Not 200 response:' + xhr.status);\n                    }\n                }\n            };\n\n            // Make our request.\n            var xhrparams = \"wstoken=\" + this.cloudpoodlltoken\n                    + \"&wsfunction=\" + functionname\n                    + \"&moodlewsrestformat=\" + 'json'\n                    + \"&text=\" + encodeURIComponent(speaktext)\n                    + '&texttype=text'\n                    + '&voice=' + this.voice\n                    + '&appid=' + 'filter_poodll'\n                    + '&owner=poodll'\n                    + '&region=useast1';\n\n            var serverurl = 'https://cloud.poodll.com' + \"/webservice/rest/server.php\";\n            xhr.open(\"POST\", serverurl, true);\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            xhr.send(xhrparams);\n        },\n\n        // Is not used.\n        // FUNCTION: Determine if the string is text or HTML.\n        isHTML: function (testString) {\n            var htmlRegex = new RegExp(\"<([A-Za-z][A-Za-z0-9]*)\\\\b[^>]*>(.*?)</\\\\1>\");\n            return htmlRegex.test(testString);\n        },\n\n        // FUNCTION: Break a text passage into words/sentences, and surround the words with marker tags.\n        spanify_text_passage: function(){\n            var that = this;\n\n            // The itemcount er.\n            var itemcount = -1;\n\n            // Get all the text nodes in the textblock.\n            var textnodes = this.textblock.find('*').contents().filter(function(){ return this.nodeType === 3; });\n            // Wrap sentence or words in text block with spans.\n            textnodes.each(function(){\n                var retpieces = '';\n                if(that.highlightmode==='word'){\n                    //for words\n                    var thewords = that.split_into_words($(this).text());\n                    for (var theword = 0; theword < thewords.length; theword++){\n                        itemcount++;\n                        retpieces =  retpieces + '<span class=\"tbr_word\" data-wordindex=\"'+ itemcount +'\">' + thewords[theword] + '</span> ';\n                    }// End of for loop.\n                } else {\n                    // For sentences.\n                    var thesentences = that.split_into_sentences($(this).text());\n                    for (var thesentence=0; thesentence < thesentences.length; thesentence++){\n                        itemcount++;\n                        retpieces =  retpieces + '<span class=\"tbr_sentence\" data-sentenceindex=\"'+ itemcount +'\">' + thesentences[thesentence] + '</span>&nbsp;';\n                    }// End of for loop.\n                }\n                $(this).replaceWith(retpieces);\n            });// End of textnodes each\n        },\n\n        // FUNCTION: Unhighlight a sentence as active.\n        dehighlight_all: function(){\n            switch(this.highlightmode){\n                case 'word':\n                    $(this.wordselector,this.textblock).removeClass('activesentence');\n                    break;\n                case 'sentence':\n                    $(this.sentenceselector).removeClass('activesentence');\n                    break;\n                case 'none':\n                default:\n                // Do nothing.\n            }\n        },\n\n        // FUNCTION: Highlight a sentence as active.\n        highlight_sentence: function(thesentence_index){\n            switch(this.highlightmode){\n                case 'word':\n                    $(this.wordselector,this.textblock).removeClass('activesentence');\n                    $(this.wordselector,this.textblock).slice(this.wordstarts[thesentence_index],\n                            this.wordstarts[thesentence_index] +\n                            this.wordcounts[thesentence_index]).addClass('activesentence');\n                    break;\n                case 'sentence':\n                    $(this.sentenceselector).removeClass('activesentence');\n                    $(this.sentenceselector + '[data-sentenceindex=' + thesentence_index + ']').addClass('activesentence');\n                    break;\n                case 'none':\n                default:\n                // Do nothing.\n            }\n        },\n\n        // FUNCTION: Play a single sentence and mark it active for display purposes.\n        doplayaudio: function(thesentence){\n            this.dehighlight_all();\n            this.highlight_sentence(thesentence);\n            this.theplayer.attr('src',this.sentenceURLs[thesentence]);\n            this.theplayer[0].load();\n            this.theplayer[0].play();\n        },\n    }\n});"],"names":["define","$","log","debug","sentenceURLs","wordstarts","wordcounts","textblock","wordselector","sentenceselector","cloudpoodlltoken","voice","highlightmode","theplayer","clone","extend","this","init","itemid","that","usetext","text","spanify_text_passage","sentences","split_into_sentences","previousend","currentsentence","length","split_into_words","speaktext","fetch_polly_url","sentenceindex","pollyurl","thetext","replace","trim","match","split","callback","xhr","XMLHttpRequest","onreadystatechange","e","readyState","status","payload","responseText","payloadobject","JSON","parse","returnCode","console","returnMessage","xhrparams","encodeURIComponent","open","setRequestHeader","send","isHTML","testString","RegExp","test","itemcount","find","contents","filter","nodeType","each","retpieces","thewords","theword","thesentences","thesentence","replaceWith","dehighlight_all","removeClass","highlight_sentence","thesentence_index","slice","addClass","doplayaudio","attr","load","play"],"mappings":"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"}