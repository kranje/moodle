{"version":3,"file":"audioplayer_minimal.min.js","sources":["../src/audioplayer_minimal.js"],"sourcesContent":["\ndefine(['jquery','core/log'], function($, log) {\n    var selectors ={\n        hiddenplayer: '_fpminimal_hiddenaudioplayer',\n        player: '_fpminimal_audioplayer',\n        ppbutton: '_fpminimal_audioplayer .fpminimal_audioplayer_play_button',\n        bar_front: '_fpminimal_audioplayer .fpminimal_audioplayer_bar_front',\n        backbutton: '_fpminimal_audioplayer .fpminimal_audioplayer_skip_button_back',\n        forwardbutton: '_fpminimal_audioplayer .fpminimal_audioplayer_skip_button_forward',\n        timedisplay: '_fpminimal_audioplayer .fpminimal_audioplayer_time'\n    }\n    var play_icon_url = require.toUrl('filter/poodll/pix/fpminimal_play.png');\n    var pause_icon_url = require.toUrl('filter/poodll/pix/fpminimal_stop.png');\n    var skipinterval =15;\n\n    var pr = {\n        init: function(opts){\n            this.hplayer = $(opts['player_element'])[0];\n            log.debug(opts['player_element']);\n            log.debug(opts['autoid']);\n            log.debug(opts);\n\n            //init can be called twice, why why\n            if($(this.hplayer).data('init')==1){\n                return;\n            }else{\n                $(this.hplayer).data('init',1);\n            }\n\n            this.vplayer= $('#' + opts['autoid'] + selectors.player);\n            this.ppbutton = $('#' + opts['autoid'] +selectors.ppbutton);\n            this.bar_front = $('#' + opts['autoid'] +selectors.bar_front);\n            this.backbutton = $('#' + opts['autoid'] +selectors.backbutton);\n            this.forwardbutton = $('#' + opts['autoid'] +selectors.forwardbutton);\n            this.timedisplay = $('#' + opts['autoid'] +selectors.timedisplay);\n\n            this.duration = this.hplayer.duration;\n            log.debug('duration is '+this.duration);\n\n            this.register_events();\n            this.update_time();\n        },\n        register_events: function(){\n            var that = this;\n            $(this.ppbutton).on('click',function(){\n                that.toggle_play();\n            });\n            $(this.backbutton).on('click',function(){\n                that.skip_back();\n            });\n            $(this.forwardbutton).on('click',function(){\n                that.skip_forward();\n            });\n            $(this.hplayer).on('timeupdate',function(){\n                that.update_time();\n            });\n            $(this.hplayer).on('ended',function(){\n                $(that.ppbutton).css('background-image', play_icon_url);\n                //reset the time display\n                $(that.timedisplay).text(that.formatAudioTime(that.duration));\n            });\n            $(this.hplayer).on('loadeddata',function(){\n                console.log(\"loadeddata\", that.hplayer.duration);\n                if(that.hplayer.duration === Infinity){\n                    //blobs dont do duration very well, so if its infinity use the time we stashed when recording\n                    that.duration=$(that.hplayer).data('duration');\n                }else {\n                    that.duration = that.hplayer.duration;\n                }\n                that.update_time();\n            });\n            $(this.hplayer).on('canplaythrough',function(){\n                //if we get the real duration here, set it\n                if(that.hplayer.duration !== Infinity) {\n                    that.duration = that.hplayer.duration;\n                }\n            });\n\n        },\n        toggle_play: function(){\n            var that = this;\n            if(this.hplayer.paused){\n                this.hplayer.muted=false;\n                console.log(this.hplayer);\n                this.hplayer.play().then(function(){\n                    log.debug('play promise resolved');\n                    $(that.ppbutton).css('background-image',pause_icon_url);\n                }).catch(function(e){\n                    log.debug(e,'play promise rejected');\n                });\n            }else{\n                this.hplayer.pause();\n                $(this.ppbutton).css('background-image:', play_icon_url);\n            }\n        },\n        update_time: function(){\n            //update the progress bar\n            var percent=0;\n            if(parseInt(this.duration) > 0){\n                percent = (this.hplayer.currentTime/this.duration)*100;\n                if(percent > 100){\n                    percent = 100;\n                }\n            }else{\n                this.duration=0;\n            }\n\n            $(this.bar_front).css('width', percent+'%');\n            //update the time display\n            switch(percent) {\n                case 0:\n                    $(this.timedisplay).text(this.formatAudioTime(this.duration));\n                    break;\n                case 100:\n                    $(this.timedisplay).text(this.formatAudioTime(this.duration));\n                    break;\n                default:\n                    $(this.timedisplay).text(this.formatAudioTime(this.hplayer.currentTime) + '/' + this.formatAudioTime(this.duration));\n            }\n\n\n            //handle back and forward buttons\n            if(this.hplayer.currentTime < skipinterval) {\n                $(this.backbutton).css('opacity', '50%');\n            }else{\n                $(this.backbutton).css('opacity', '100%');\n            }\n\n            if(this.hplayer.currentTime > (this.duration - skipinterval)) {\n                $(this.forwardbutton).css('opacity', '50%');\n            }else{\n                $(this.forwardbutton).css('opacity', '100%');\n            }\n        },\n        skip_back: function(){\n            if(this.hplayer.currentTime > skipinterval) {\n                this.hplayer.currentTime = this.hplayer.currentTime - skipinterval;\n            }else{\n                this.hplayer.currentTime = 0;\n            }\n        },\n        skip_forward: function(){\n            if(this.hplayer.currentTime < (this.duration - skipinterval)) {\n                this.hplayer.currentTime = this.hplayer.currentTime + skipinterval;\n            }else{\n                this.hplayer.currentTime = this.duration;\n            }\n        },\n        formatAudioTime: function (currentTime) {\n            const minutes = Math.floor(currentTime / 60);\n            const seconds = Math.floor(currentTime % 60);\n            const formattedTime = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n            return formattedTime;\n        }\n\n    };\n\n    //init the player\n    return pr;\n});\n"],"names":["define","$","log","selectors","play_icon_url","require","toUrl","pause_icon_url","init","opts","hplayer","debug","this","data","vplayer","ppbutton","bar_front","backbutton","forwardbutton","timedisplay","duration","register_events","update_time","that","on","toggle_play","skip_back","skip_forward","css","text","formatAudioTime","console","Infinity","paused","muted","play","then","catch","e","pause","percent","parseInt","currentTime","minutes","Math","floor","seconds","String","padStart"],"mappings":"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"}