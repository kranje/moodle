{"version":3,"file":"events.min.js","sources":["../src/events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/ //\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript events for the `mod_threesixo`.\n *\n * @module     mod_threesixo/events\n * @copyright  2023 Jun Pataleta <jun@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n * @example <caption>Example of listening to a mod_threesixo event.</caption>\n * import {eventTypes as threesixoEventTypes} from 'core_threesixo/events';\n *\n * document.addEventListener(threesixoEventTypes.itemsUpdated, e => {\n *     window.console.log(e.target); // The HTMLElement relating to the block whose content was updated.\n *     window.console.log(e.detail.instanceId); // The instanceId of the block that was updated.\n * });\n */\n\nimport {dispatchEvent} from 'core/event_dispatcher';\n\n/**\n * Events for `mod_threesixo`.\n *\n * @constant\n * @property {String} itemsUpdated See {@link event:itemsUpdated}\n */\nexport const eventTypes = {\n    /**\n     * An event triggered when the items for a 360-degree feedback instance have been updated.\n     *\n     * @event itemsUpdated\n     * @type {CustomEvent}\n     * @property {HTMLElement} target The block element that was updated\n     * @property {object} detail\n     * @property {number} detail.instanceId The block instance id\n     */\n    itemsUpdated: 'mod_threesixo/itemsUpdated',\n};\n\n/**\n * Trigger an event to indicate that the content of a block was updated.\n *\n * @method notifyItemsUpdated\n * @param {Number} threesixtyId The 360-degree feedback instance ID.\n * @returns {itemsUpdated}\n * @fires itemsUpdated\n */\nexport const notifyItemsUpdated = threesixtyId => dispatchEvent(\n    eventTypes.itemsUpdated,\n    {\n        threesixtyId: threesixtyId,\n    }\n);\n"],"names":["eventTypes","itemsUpdated","threesixtyId"],"mappings":";;;;;;;;;;;;;;;;MAsCaA,WAAa,CAUtBC,aAAc,yFAWgBC,eAAgB,mCAC9CF,WAAWC,aACX,CACIC,aAAcA"}